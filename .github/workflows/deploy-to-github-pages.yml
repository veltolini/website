name: Deploy to GitHub Pages

on:
  schedule:
    # Schedule for every day at 12:00 CEST
    - cron: '0 10 * * *'
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    name: Lint, format, test and build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 7.22.0

      - name: Use Node LTS ✨
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn

      - name: Install dependencies 📦️
        run: yarn install --immutable

      - name: Build 🔨
        run: yarn build-static

      - name: Upload GitHub Pages assets 📦️
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  deploy:
    name: Deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v1

  screenshot:
    name: Screenshot
    needs: deploy
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        width: [1200, 992, 768, 600]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Screenshot Website 📸
        uses: swinton/screenshot-website@v1.x
        with:
          source: ${{ needs.deploy.outputs.url }}
          destination: screenshot-${{ matrix.os }}-${{ matrix.width }}.png
          width: ${{ matrix.width }}

  lighthouse:
    name: Lighthouse
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Lighthouse Website 📈
        uses: treosh/lighthouse-ci-action@v9
        with:
          # TODO: Add URLs as we add more pages
          urls: |
            ${{ needs.deploy.outputs.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
